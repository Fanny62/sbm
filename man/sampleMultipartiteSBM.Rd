% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample.R
\name{sampleMultipartiteSBM}
\alias{sampleMultipartiteSBM}
\title{Sampling of Multipartite SBMs}
\usage{
sampleMultipartiteSBM(
  nbNodes,
  blockProp,
  archiMultipartite,
  connectParam,
  model,
  directed,
  dimLabels = NULL,
  seed = NULL
)
}
\arguments{
\item{nbNodes}{number of nodes in each functional group involved in the multipartite network}

\item{blockProp}{a list of parameters for block proportions  in each functional group}

\item{archiMultipartite}{a matrix with two columns and nbNetworks lines, each line specifying the index of the functional groups in interaction.}

\item{connectParam}{list of parameters for connectivity (of length nbNetworks). Each element is a list of one or two elements: a matrix of means 'mean' and an optional matrix of variances 'var', the sizes of which must match \code{blockProp} length}

\item{model}{a vector of characters describing the model for  each network of the Multipartite relation between nodes (\code{'bernoulli'}, \code{'poisson'}, \code{'gaussian'}, ...). Default is \code{'bernoulli'}.}

\item{directed}{a vector of logical, directed network or not for each network. Default is \code{FALSE}.}

\item{dimLabels}{an optional list of labels for functional group involved in the network}
}
\value{
a list of two elements : \code{simulatedMemberships} are the clustering of each node in each Functiontal Group,  \code{multipartiteNetwork} is the list of the simulated networks (each one being  a simple or bipartite network)
}
\description{
This function samples a Multipartite Stochastic Block Models, with various model
for the distribution of the edges:  Bernoulli, Poisson, or Gaussian models
}
\examples{
### =======================================
### MULTIPARTITE SBM  : 4 networks between 3 Functional Groups
## Graph parameters
# About the Functional Groups (FG)
nbFunctionalGroups <- 3  #number of functional groups
nbBlocks  <- c(3,2,2) #number of clusters in each functional group
nbNodes <-  c(100,50,40)
blockProp <- vector("list", 3)  # parameters of clustering in each functional group
blockProp[[1]] <- c(0.4,0.3,0.3) # in Functional Group 1
blockProp[[2]] <- c(0.6,0.4) # in Functional Group 2
blockProp[[3]]  <- c(0.6,0.4) # in Functional Group 3
# About the interactions between the FG
archiMultipartite  <-  rbind(c(1,2),c(2,3),c(2,2),c(1,3)) # architecture of the various networks (FG interaction : 1 with  2, 2 wih 3, 1 with 3 and interactions inside FG 2. )
model <- c('bernoulli','poisson','bernoulli','gaussian') # type of distribution in each network
directed <- c( NA, NA  ,  FALSE , NA) # for each network : directed or not (not required for an interaction wetween two different FG)
connectParam <- list()
E <- archiMultipartite
connectParam[[1]] <- list(mean = matrix(rbeta(nbBlocks[E[1,1]] * nbBlocks[E[1,2]],1,1 ),nrow = nbBlocks[E[1,1]], ncol = nbBlocks[E[1,2]] ))
connectParam[[2]] <- list(mean  =  matrix(rgamma(nbBlocks[E[2,1]] * nbBlocks[E[2,2]],7.5,0.01 ),nrow = nbBlocks[E[2,1]], ncol = nbBlocks[E[2,2]]))
connectParam[[3]] <- list(mean  =  matrix(rbeta(nbBlocks[E[3,1]] * nbBlocks[E[3,2]],0.9,0.9 ), nrow = nbBlocks[E[3,1]], ncol = nbBlocks[E[3,2]]))
connectParam[[3]]$mean <-  0.5*(connectParam[[3]]$mean + t(connectParam[[3]]$mean)) # symetrisation for network 3
connectParam[[4]] <- list(mean = matrix(rnorm(nbBlocks[E[4,1]] * nbBlocks[E[4,2]],7.5,10 ), nrow = nbBlocks[E[4,1]], ncol = nbBlocks[E[4,2]]))
connectParam[[4]]$var <- matrix(rgamma(nbBlocks[E[4,1]] * nbBlocks[E[4,2]],7.5,0.1 ), nrow = nbBlocks[E[4,1]], ncol = nbBlocks[E[4,2]])
dimLabels <- as.list(c('A','B','C'))
seed <- 10
## Graph Sampling
mySampleMBM <- sampleMultipartiteSBM(nbNodes, blockProp, archiMultipartite, connectParam, model, directed, dimLabels,seed)
listSBM <- mySampleMBM$listSBM
memberships <- mySampleMBM$memberships
plotMyMultipartiteMatrix(listSBM,memberships)
}
